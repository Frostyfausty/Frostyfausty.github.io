{
  "hash": "3b6e8a71e91ca34c4d021033ffc3ef9d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"CMU EDA Project\"\ndescription: \"Covid Vaccine Deliveries Within California\"\ndate: \"June 2025\"\nresources: \".\"\nabout: \n  template: trestles\n  image-shape: rounded\n  image: cover.jpg\n  links: \n    - icon: github\n      text: \"Github\"\n      href: \"https://github.com/liv426kim/EDA_COVID_Vax.git\"\n    - icon: file-slides-fill\n      text: \"Slides\"\n      href: \"https://docs.google.com/presentation/d/1cF7XaAD7wFIbbZJCLsyBthlg6e0TBr9GTeJ66G95Ny0/edit?usp=sharing\"\n    - icon: database\n      text: \"CDC Dataset\"\n      href: \"https://raw.githubusercontent.com/36-SURE/2025/main/data/covid_california.csv\"\n      \n---\n\n\n\nThis is my EDA Project completed during my REU at Carnegie Mellon University. This was collaboration project with Olivia Kim and Arturo Espana. An Exploratory Data Analysis (EDA) project involves systematically examining a dataset to understand its main characteristics, identify patterns, and potentially uncover insights before formal analysis or modeling. \nWe built an analysis on the shipment and delivery of COVID-19 Vaccinations in counties throughout California\n\nSome info:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ncovid_cases_deaths <- read_csv(\"https://raw.githubusercontent.com/36-SURE/2025/main/data/covid_california.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 5907 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (1): county\ndbl  (20): year, week, doses_shipped, cumulative_doses_shipped, doses_delive...\ndate  (2): first_date, last_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nccd <- covid_cases_deaths\nccd_prop <- ccd\n\nsummarize(ccd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 0\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(ccd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    county               year           week         first_date        \n Length:5907        Min.   :2021   Min.   : 1.00   Min.   :2021-01-01  \n Class :character   1st Qu.:2021   1st Qu.:14.00   1st Qu.:2021-06-25  \n Mode  :character   Median :2021   Median :27.00   Median :2021-12-27  \n                    Mean   :2021   Mean   :26.89   Mean   :2021-12-29  \n                    3rd Qu.:2022   3rd Qu.:40.00   3rd Qu.:2022-07-08  \n                    Max.   :2022   Max.   :53.00   Max.   :2022-12-31  \n   last_date          doses_shipped    cumulative_doses_shipped\n Min.   :2021-01-07   Min.   :     0   Min.   :     1280       \n 1st Qu.:2021-07-01   1st Qu.:   700   1st Qu.:   291182       \n Median :2021-12-28   Median :  3740   Median :  1402655       \n Mean   :2022-01-03   Mean   : 18675   Mean   :  6270235       \n 3rd Qu.:2022-07-09   3rd Qu.: 14795   3rd Qu.:  5505285       \n Max.   :2022-12-31   Max.   :985100   Max.   :202581530       \n doses_delivered  cumulative_doses_delivered cdc_pharmacy_doses_delivered\n Min.   :     0   Min.   :     1180          Min.   :     0              \n 1st Qu.:   720   1st Qu.:   287412          1st Qu.:   300              \n Median :  3800   Median :  1395235          Median :  1800              \n Mean   : 18642   Mean   :  6245018          Mean   :  8606              \n 3rd Qu.: 15100   3rd Qu.:  5479332          3rd Qu.:  7155              \n Max.   :979370   Max.   :202374700          Max.   :333610              \n cumulative_cdc_pharmacy_doses_delivered pfizer_doses_shipped\n Min.   :       0                        Min.   :     0      \n 1st Qu.:   70680                        1st Qu.:     0      \n Median :  453490                        Median :  1170      \n Mean   : 2454764                        Mean   :  8488      \n 3rd Qu.: 1961868                        3rd Qu.:  5400      \n Max.   :91299160                        Max.   :491400      \n cumulative_pfizer_doses_shipped pfizer_doses_delivered\n Min.   :       0                Min.   :     0        \n 1st Qu.:   92820                1st Qu.:     0        \n Median :  654705                Median :  1170        \n Mean   : 3255861                Mean   :  8481        \n 3rd Qu.: 2878830                3rd Qu.:  5805        \n Max.   :92097300                Max.   :574470        \n cumulative_pfizer_doses_delivered moderna_doses_shipped\n Min.   :       0                  Min.   :     0       \n 1st Qu.:   91762                  1st Qu.:   200       \n Median :  651435                  Median :   980       \n Mean   : 3243578                  Mean   :  5749       \n 3rd Qu.: 2866868                  3rd Qu.:  3800       \n Max.   :92031480                  Max.   :458700       \n cumulative_moderna_doses_shipped moderna_doses_delivered\n Min.   :     200                 Min.   :     0         \n 1st Qu.:  155690                 1st Qu.:   200         \n Median :  600420                 Median :  1000         \n Mean   : 2270326                 Mean   :  5744         \n 3rd Qu.: 2053670                 3rd Qu.:  3900         \n Max.   :64280080                 Max.   :404900         \n cumulative_moderna_doses_delivered jj_doses_shipped  \n Min.   :     200                   Min.   :     0.0  \n 1st Qu.:  154600                   1st Qu.:     0.0  \n Median :  597300                   Median :     0.0  \n Mean   : 2263332                   Mean   :   612.1  \n 3rd Qu.: 2051450                   3rd Qu.:   100.0  \n Max.   :64225200                   Max.   :230400.0  \n cumulative_jj_doses_shipped jj_doses_delivered cumulative_jj_doses_delivered\n Min.   :      0             Min.   :     0.0   Min.   :      0              \n 1st Qu.:  10700             1st Qu.:     0.0   1st Qu.:  10350              \n Median :  63100             Median :     0.0   Median :  63000              \n Mean   : 253757             Mean   :   611.8   Mean   : 253076              \n 3rd Qu.: 211750             3rd Qu.:   100.0   3rd Qu.: 211400              \n Max.   :7015100             Max.   :228100.0   Max.   :7012700              \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(ccd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"county\"                                 \n [2] \"year\"                                   \n [3] \"week\"                                   \n [4] \"first_date\"                             \n [5] \"last_date\"                              \n [6] \"doses_shipped\"                          \n [7] \"cumulative_doses_shipped\"               \n [8] \"doses_delivered\"                        \n [9] \"cumulative_doses_delivered\"             \n[10] \"cdc_pharmacy_doses_delivered\"           \n[11] \"cumulative_cdc_pharmacy_doses_delivered\"\n[12] \"pfizer_doses_shipped\"                   \n[13] \"cumulative_pfizer_doses_shipped\"        \n[14] \"pfizer_doses_delivered\"                 \n[15] \"cumulative_pfizer_doses_delivered\"      \n[16] \"moderna_doses_shipped\"                  \n[17] \"cumulative_moderna_doses_shipped\"       \n[18] \"moderna_doses_delivered\"                \n[19] \"cumulative_moderna_doses_delivered\"     \n[20] \"jj_doses_shipped\"                       \n[21] \"cumulative_jj_doses_shipped\"            \n[22] \"jj_doses_delivered\"                     \n[23] \"cumulative_jj_doses_delivered\"          \n```\n\n\n:::\n\n```{.r .cell-code}\ndim(ccd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5907   23\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n# Assuming 'ccd' is your dataset containing vaccine shipment data\nccd_prop <- ccd |>\n  group_by(county) |>\n  summarise(\n    pfizer = sum(pfizer_doses_shipped, na.rm = TRUE),\n    moderna = sum(moderna_doses_shipped, na.rm = TRUE),\n    jj = sum(jj_doses_shipped, na.rm = TRUE)) |>\n  mutate(total = pfizer + moderna + jj) |>\n  mutate(\n    pfizer = pfizer / total,\n    moderna = moderna / total,\n    jj = jj / total) |>\n  select(-total) |>\n  pivot_longer(cols = c(pfizer, moderna, jj),\n               names_to = \"vaccine\",\n               values_to = \"proportion\")\n\n# Create the stacked bar chart\nggplot(ccd_prop, aes(x = fct_rev(factor(county)), y = proportion, fill = vaccine)) +\n  geom_col(position = \"stack\") +\n  coord_flip() +  # Flip coordinates for horizontal bars\n  scale_y_continuous(\n    limits = c(0, 1),\n    breaks = seq(0, 1, by = 0.2),\n    labels = scales:: percent_format(accuracy = 1),\n    expand = expansion(mult = c(0, 0.02))) +\n  theme_minimal(base_size = 12) +\n  theme(\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.line.x = element_line(color = \"gray50\"),\n    axis.ticks.x = element_line(color = \"gray50\"),\n    plot.title = element_text(face = \"bold\", size = 14),\n    legend.position = \"top\",\n    legend.title = element_text(face = \"bold\"),\n    plot.margin = margin(1, 1, 1, 1, \"cm\")\n  ) +\n  labs(\n    title = \"Proportion of Vaccine Doses by County (Alphabetical Order)\",\n    x = NULL,\n    y = \"Proportion of Total Doses\",\n    fill = \"Vaccine Manufacturer\"\n  )+\n  scale_fill_manual(values = c(\"pfizer\" = \"darkblue\", \n                               \"moderna\" = \"firebrick\", \n                               \"jj\" = \"#FF9999\"))\n```\n\n::: {.cell-output-display}\n![](EDA_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n```",
    "supporting": [
      "EDA_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}